apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "jenkin-new.fullname" . }}
  labels:
    {{- include "jenkin-new.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  updateStrategy:
    type: "RollingUpdate"
  selector:
    matchLabels:
      {{- include "jenkin-new.selectorLabels" . | nindent 6 }}
  serviceName: "nginx"
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "jenkin-new.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jenkin-new.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-myservice
          image: ubuntu
          command: ['sh', '-c', "chown 1000:1000 /var/jenkins_home && ls -la /var/jenkins_home" ]
          volumeMounts:
            - name: www
              mountPath: /var/jenkins_home
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: www
              mountPath: /var/jenkins_home
          livenessProbe:
            httpGet:
              path: /robots.txt
              port: http
            timeoutSeconds: 20
          readinessProbe:
            httpGet:
              path: /robots.txt
              port: http
            timeoutSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 10Gi